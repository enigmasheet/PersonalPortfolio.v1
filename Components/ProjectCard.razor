<div class="project-card">
    <div class="image-slider">
        <button class="nav-button left" @onclick="ShowPreviousImage" title="Previous">&#10094;</button>
        <img src="@CurrentImage"
             alt="@Title"
             class="project-image"
             loading="lazy"
             onerror="this.onerror=null;this.src='@fallbackImageUrl';" />
        <button class="nav-button right" @onclick="ShowNextImage" title="Next">&#10095;</button>
    </div>

    <h3 class="project-title">@Title</h3>
    <p class="project-description">@Description</p>
   

    @if (Technologies?.Any() == true)
    {
        <div class="tech-tags">
            @foreach (var tech in Technologies)
            {
                <span class="tech-tag">@tech</span>
            }
        </div>
    }

    @if (Tags?.Any() == true)
    {
        <div class="project-tags">
            @foreach (var tag in Tags)
            {
                <span class="project-tag">@tag</span>
            }
        </div>
    }

    <div class="project-links">
        <a href="@GitHubLink" target="_blank" rel="noopener noreferrer" class="project-link">
            GitHub
        </a>

        @if (LiveDemoActive && !string.IsNullOrWhiteSpace(LiveDemo))
        {
            <a href="@LiveDemo" target="_blank" rel="noopener noreferrer" class="project-link live-demo">
                Live Demo
            </a>
        }
        else
        {
            <button class="project-link live-demo disabled" disabled title="Live demo not available">
                Live Demo
            </button>
        }
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public List<string> ImageUrls { get; set; } = new();
    [Parameter] public string GitHubLink { get; set; }
    [Parameter] public string LiveDemo { get; set; }
    [Parameter] public bool LiveDemoActive { get; set; } = false;
    [Parameter] public List<string> Technologies { get; set; } = new();
    [Parameter] public List<string> Tags { get; set; } = new();

    private string fallbackImageUrl;
    private int currentImageIndex = 0;

    protected override void OnParametersSet()
    {
        var repo = GitHubLink?.Split('/').LastOrDefault();
        var owner = GitHubLink?.Split('/').Reverse().Skip(1).FirstOrDefault();

        fallbackImageUrl = !string.IsNullOrWhiteSpace(owner) && !string.IsNullOrWhiteSpace(repo)
            ? $"https://opengraph.githubassets.com/1/{owner}/{repo}"
            : "images/fallback.png";

        if (ImageUrls == null || !ImageUrls.Any())
        {
            ImageUrls = new List<string> { fallbackImageUrl };
        }
        else if (!ImageUrls.Contains(fallbackImageUrl))
        {
            ImageUrls.Add(fallbackImageUrl);
        }
    }

    private void ShowNextImage()
    {
        currentImageIndex = (currentImageIndex + 1) % ImageUrls.Count;
    }

    private void ShowPreviousImage()
    {
        currentImageIndex = (currentImageIndex - 1 + ImageUrls.Count) % ImageUrls.Count;
    }

    private string CurrentImage => ImageUrls.ElementAtOrDefault(currentImageIndex) ?? fallbackImageUrl;
}




<style>
    .project-card {
        background-color: var(--card-bg, #fff);
        border-radius: 1rem;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        width: 100%;
        max-width: 460px;
        display: flex;
        flex-direction: column;
        gap: 1.25rem;
        transition: transform 0.2s, box-shadow 0.3s;
    }

        .project-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
        }

    .image-slider {
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #darkseagreen;
        height: 200px;
        border-radius: 0.75rem;
    }


    .project-image {
        width: 100%;
        height: 200px;
        border-radius: 0.75rem;
        object-fit: contain;
        background-color:darkseagreen;
        transition: opacity 0.3s ease;
    }

    .nav-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.5);
        border: none;
        color: #fff;
        font-size: 1.2rem;
        padding: 0.4rem 0.75rem;
        cursor: pointer;
        border-radius: 50%;
        z-index: 10;
        transition: background-color 0.3s;
    }

        .nav-button.left {
            left: 10px;
        }

        .nav-button.right {
            right: 10px;
        }

        .nav-button:hover {
            background-color: rgba(0, 0, 0, 0.75);
        }

    .project-title {
        font-size: 1.4rem;
        font-weight: 700;
        color: var(--text-primary, #222);
        margin: 0;
    }

    .project-description {
        font-size: 1rem;
        color: var(--text-secondary, #555);
        line-height: 1.5;
    }

    /* .project-created-date {
        font-size: 0.85rem;
        color: var(--text-secondary, #777);
        font-style: italic;
        margin: -0.75rem 0 0.5rem;
    } */

    .tech-tags, .project-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.4rem;
    }

    .tech-tag {
        background: #007bff;
        color: #fff;
        font-size: 0.75rem;
        padding: 0.3rem 0.6rem;
        border-radius: 0.4rem;
        font-weight: 600;
    }

    .project-tag {
        background: #eee;
        color: #333;
        font-size: 0.7rem;
        padding: 0.2rem 0.5rem;
        border-radius: 0.4rem;
        font-weight: 500;
    }

    .project-links {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
    }

    .project-link {
        background: #007bff;
        color: #fff;
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: background 0.3s, transform 0.2s;
    }

        .project-link:hover {
            background: #0056b3;
            transform: translateY(-2px);
        }

        .project-link.live-demo {
            background: #28a745;
        }

            .project-link.live-demo:hover {
                background: #218838;
            }

            .project-link.live-demo.disabled {
                background: #6c757d;
                color: #ddd;
                cursor: not-allowed;
                pointer-events: none;
            }

    /* Responsive */
    @@media (max-width: 480px) {
        .project-card

    {
        padding: 1rem;
        width: 100%;
    }

    .project-image {
        height: 160px;
    }

    .project-title {
        font-size: 1.2rem;
    }

    .project-description {
        font-size: 0.95rem;
    }

    }
</style>
