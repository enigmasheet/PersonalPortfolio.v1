@inject HttpClient Http

<section id="projects" class="projects-section">
    <h2 class="section-title">Some Projects I’ve Built</h2>

    @if (projects == null)
    {
        <p>Loading...</p>
    }
    else if (!projects.Any())
    {
        <p>No projects to show yet.</p>
    }
    else
    {
        <div class="project-grid">
            @foreach (var p in projects)
            {
                <ProjectCard @key="p.Title"
                             Title="@p.Title"
                             Description="@p.Description"
                             ImageUrls="@p.ImageUrls"
                             GitHubLink="@p.GitHubLink"
                             LiveDemo="@p.LiveDemo"
                             LiveDemoActive="@p.LiveDemoActive"
                             Technologies="@p.Technologies"
                             Tags="@p.Tags" />

            }
        </div>
    }
</section>

@code {
    public class ProjectModel
    {
        public string Title { get; set; }
        public string Description { get; set; }
        public List<string> ImageUrls { get; set; }
        public string GitHubLink { get; set; }
        public string LiveDemo { get; set; }
        public bool LiveDemoActive { get; set; }
        public List<string> Technologies { get; set; }
        public List<string> Tags { get; set; }
    }

    List<ProjectModel> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<ProjectModel>>("data/projects.json");
    }
}

<style>
    .projects-section {
        max-width: 900px;
        margin: 4rem auto;
        padding: 0 2rem;
        text-align: center;
        color: var(--text-primary);
    }

    .section-title {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 2rem;
    }

    .project-grid {
        display: grid;
        gap: 2rem;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        justify-items: center;
    }
</style>
